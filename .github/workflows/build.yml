# Name des automatisierten Prozesses
name: Build Android APK with Kivy Docker Action

# Wann soll dieser Prozess gestartet werden?
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

# Definiert die Aufgaben ("Jobs"), die ausgeführt werden sollen
jobs:
  build-android:
    # Verwendet die neueste Version von Ubuntu als Basis
    runs-on: ubuntu-latest

    steps:
      # Schritt 1: Kopiert Ihren Code in die Umgebung
      - name: Checkout
        uses: actions/checkout@v4

      # Schritt 2: Benennt Ihre Hauptdatei korrekt um
      - name: Rename main file for build
        run: mv main_apk.py main.py

      # Schritt 3: Verwendet die offizielle Kivy-Buildozer-Action
      # Dies ist die Magie. Diese Action lädt einen perfekten Docker-Container,
      # in dem alle Abhängigkeiten bereits korrekt installiert und konfiguriert sind.
      - name: Build with Buildozer
        uses: kivy/buildozer-action@master
        id: buildozer
        with:
          # Wir führen hier den exakt gleichen Befehl aus, aber in einer perfekten Umgebung
          command: buildozer -v android debug

      # Schritt 4: Lädt die fertige APK-Datei hoch
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: voicecloningapp-apk
          # Dieser Pfad verweist auf die Ausgabe der vorherigen Action
          path: ${{ steps.buildozer.outputs.package_path }}
