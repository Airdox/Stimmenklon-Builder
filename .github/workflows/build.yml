# Name des automatisierten Prozesses
name: Build Android APK (Direct Docker Method)

# Wann soll dieser Prozess gestartet werden?
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

# Definiert die Aufgaben ("Jobs"), die ausgeführt werden sollen
jobs:
  build-android:
    # Verwendet die neueste Version von Ubuntu als Basis
    runs-on: ubuntu-latest

    steps:
      # Schritt 1: Kopiert Ihren Code (main.py, buildozer.spec) in die Build-Umgebung
      - name: Checkout
        uses: actions/checkout@v4

      # Schritt 2: Führt den Buildozer-Befehl direkt im offiziellen Kivy Docker-Container aus
      - name: Build with Buildozer using Docker
        # Dies ist der entscheidende Schritt. Wir rufen Docker direkt auf.
        run: |
          docker run --rm \
            -v "$(pwd)":/home/user/app \
            kivy/buildozer:latest \
            buildozer -v android debug

      # Schritt 3: Lädt die fertige APK-Datei als "Artefakt" hoch
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: voicecloningapp-apk
          # Der Build-Prozess erstellt den 'bin'-Ordner in unserem lokalen Verzeichnis,
          # daher ist dieser Pfad korrekt.
          path: bin/*.apk
